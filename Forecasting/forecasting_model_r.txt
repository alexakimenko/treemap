#install.packages("forecast")
#install.packages("reshape")
library(forecast)
library(reshape)

add.months= function(date,n) seq(date, by = paste (n, "months"), length = 2)[2]

forecastStl <- function(x,dates, n.ahead = 6) {
    myTs <- ts(x, frequency = 12)
    fit.stl <- stl(myTs, s.window = 'periodic')
    sts <- fit.stl$time.series
    trend <- sts[, "trend"]
    fore <- forecast(fit.stl, h = n.ahead, level = 95)
    plot(fore)
    pred <- fore$mean
    upper <- fore$upper
    lower <- fore$lower
    output <- data.frame(actual = c(x, rep(NA, n.ahead)), 
        trend = c(trend, rep(NA, n.ahead)), 
        pred = c(rep(NA, length(x)), pred), 
        lower = c(rep(NA, length(x)), lower), 
        upper = c(rep(NA, length(x)), upper), 
        date = c(dates, seq.Date(as.Date(max(dates))+1, by = "month", length.out = n.ahead)))
    return(output)
}



avg_l3_ns_months<-function(myTs,n.ahead = 6){
    myTs_cleared<-subset(myTs,season=c(2,3,4,6,7,8,9,10,11))
    pred<-rep(mean(tail(myTs_cleared,3)),n.ahead )
	start<-tsp(myTs)[2]+2/12
	start<-c(trunc(start),start%%1*12)     # incorrect for Dec!
    pred<-ts(pred,start=start, frequency=12) 
	return(pred)
}


MAPE_ts<-function(myTs, n.ahead=6){
	test_df<-data.frame()
	for (i in 12:length(myTs)){
		end<-tsp(myTs)[1]+i/12
		end<-c(trunc(end),end%%1*12)
		t_myTs<-window(myTs,end=end)
		t_myTs_pred<-avg_l3_ns_months(t_myTs,n.ahead)
		df<-data.frame(YearMonth=as.Date(paste(end(t_myTs_pred)[1],end(t_myTs_pred)[2],1,sep="/")),
			n.ahead=n.ahead,
			actual=myTs[i+n.ahead],
			forecast=t_myTs_pred[n.ahead],
			MAPE=abs(t_myTs_pred[n.ahead]-myTs[i+n.ahead])/myTs[i+n.ahead])
		test_df<-rbind(test_df,df)
	}
	return(test_df)
}


path<-"//vkovnazcti0023/COL/0-Collections_Strategy_and_System_Support/STRATEGY/Akimenko/pilots/forecasting/"
v<-read.csv(paste0(path,"input.csv"),header=T,sep=";")
v$YearMonth<-as.POSIXct(strptime(v$YearMonth, "%d.%m.%Y"))
variables<-colnames(v)[2:ncol(v)]
start_month<-c(2013, 1)  # correct - needs to be selected from input data
end_month<-c(2016, 4) # correct - needs to be selected from input data
forecast_month<-c(2016, 5) # correct - needs to be selected from input data
output<-data.frame()
output1<-data.frame()

for (var in variables){
	myTs<-ts(v[,var], start=start_month, end=end_month, frequency=12)
	MAPE6<-MAPE_ts(myTs,6)
	MAPE6$var<-var
	MAPE3<-MAPE_ts(myTs,3)
	MAPE3$var<-var
	output<-rbind(output,MAPE6,MAPE3)
	forecast<-avg_l3_ns_months(myTs,6)
	output1i<-data.frame(YearMonth=MAPE6$YearMonth,
	value=as.numeric(c(rep("", nrow(MAPE6)-6), forecast)),
	var=var)
	output1<-rbind(output1,output1i)
}

###  validation results
output_<-melt(output, id=c("YearMonth","n.ahead","var"))
output_$value<-as.numeric(output_$value)
output_c<-cast(output_, var + n.ahead + variable ~ YearMonth)
output_c[is.na(output_c)] <- ""
write.table(output_c, paste0(path,"/output/validation_results.txt"), sep="\t",row.names=F)	


###  validation summary
output2<-aggregate(x=output$MAPE,by=list(output$n.ahead,output$var),function(x) mean(x,na.rm=T))
colnames(output2) <- c("n.ahead", "ProductBucket","MAPE")
output2$Date<-as.Date(paste(forecast_month[1],forecast_month[2],1,sep="/"))
write.table(output2, paste0(path,"/output/validation_summary.txt"), sep="\t",row.names=F)	

###  forecast
output1_c<-cast(output1, var~ YearMonth)
output1_c[is.na(output1_c)] <- ""
write.table(output1_c, paste0(path,"/output/forecast.txt"), sep="\t",row.names=F)	





v$B1CCNF<-v$B1CC/append(0,v$B0CC)[-nrow(v)]
myTs<-ts(v$B1CCNF[-1], start=c(2013, 1), end=c(2016, 4), frequency=12)
MAPE6<-MAPE_ts(myTs,6)



plot(v$YearMonth, v$B1CCNF, xlab="Year", ylab="Net flow", type="l")

v.ts<-ts(v$B1CCNF, frequency=12)
fit = stl(v.ts, s.window='periodic')
sts <- fit$time.series
x_sts<- forecast(sts , h = 6, level = 90)

B1CCNF<- forecastStl(v$B1CCNF,v$YearMonth, n.ahead = 6)

seq.Date(as.Date(d)+1, by = "month", length.out = 6)